name: Release malai

on:
  workflow_dispatch:
    inputs:
      releaseTag:
        description: 'Release Version (will be prefixed with "malai-")'
        required: true
      productionRelease:
        type: boolean
        description: Mark release as production ready

jobs:
  build-linux:
    name: Build Linux (${{ matrix.target }})
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            name: linux_x86_64
          - target: aarch64-unknown-linux-gnu
            name: linux_aarch64
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}

      - name: print rustc version
        run: rustc --version

      - name: Install aarch64 target
        if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        run: |
          sudo apt update
          sudo apt install gcc-aarch64-linux-gnu
          rustup target add aarch64-unknown-linux-gnu

      - name: Cargo build for ${{ matrix.target }}
        run: cargo build --release --bin malai --target ${{ matrix.target }}

      - name: Show build artifacts
        run: |
          file target/${{ matrix.target }}/release/malai
          # LDD will only work for the native architecture (x86_64).
          # On other architectures, this command will likely fail, so we allow it to.
          ldd target/${{ matrix.target }}/release/malai || echo "ldd not available for this architecture."
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: target/${{ matrix.target }}/release/malai
  build-macos:
    name: Build for MacOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: print rustc version
        run: rustc --version
      - name: Run Build
        id: build-macos
        continue-on-error: false
        run: cargo build --release --bin malai
      - name: print malai version
        run: ./target/release/malai --version
      - name: print file info
        run: |
          file ./target/release/malai
          otool -L ./target/release/malai
      - uses: actions/upload-artifact@v4
        with:
          name: macos_x64_latest
          path: |
            target/release/malai
  build-windows:
    name: Build for Windows
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: print rustc version
        run: rustc --version
      - name: cargo build
        run: cargo build --release --bin malai
      - name: print malai version
        run: target\release\malai.exe --version
      - name: bundle
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path target/release/bundle
          Copy-Item target/release/malai.exe target/release/bundle/malai.exe
          Copy-Item .github/MALAI_WIN_INSTALL.md target/release/bundle/INSTALL.md
          Copy-Item CHANGELOG.md target/release/bundle/CHANGELOG.md
          Copy-Item LICENSE target/release/bundle/LICENSE
          Set-Location target/release/bundle
          7z a -tzip malai.zip malai.exe INSTALL.md CHANGELOG.md LICENSE
      - uses: actions/upload-artifact@v4
        with:
          name: windows_x64_latest
          path: target/release/bundle/malai.zip
  create-release:
    name: Create github tag and release
    runs-on: ubuntu-latest
    needs: [ build-linux, build-macos, build-windows ]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: macos_x64_latest
          path: ~/download/macos
      - uses: actions/download-artifact@v4
        with:
          name: linux_x86_64
          path: ~/download/linux
      - uses: actions/download-artifact@v4
        with:
          name: windows_x64_latest
          path: ~/download/windows
      - name: Rename assets
        run: |
          mv ~/download/macos/malai ~/download/macos/malai_macos_x86_64
          mv ~/download/linux/malai ~/download/linux/malai_linux_x86_64
          mv ~/download/windows/malai.zip ~/download/windows/malai_windows_x86_64.zip
      - name: Update .github/MALAI_RELEASE_TEMPLATE.md
        run: |
          sed -i "s/GITHUB_SHA/${GITHUB_SHA}/g" .github/MALAI_RELEASE_TEMPLATE.md
          sed -i "s/DATE/$(date)/g" .github/MALAI_RELEASE_TEMPLATE.md
      - name: setup release template
        run: |
          awk -v version="### malai ${{ github.event.inputs.releaseTag }}" '
            $0 == version { found=1; print; next }
            found && /^## [0-9]{2}/ { exit }
            found && /^### malai / { exit }
            found { print }
          ' CHANGELOG.md | sed "1s/.*/# What's Changed/" >> .github/MALAI_RELEASE_TEMPLATE.md
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "~/download/macos/malai_macos_x86_64,~/download/linux/malai_linux_x86_64,~/download/windows/malai_windows_x86_64.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: malai-${{ github.event.inputs.releaseTag }}
          prerelease: ${{ github.event.inputs.productionRelease && github.event.inputs.productionRelease == 'false' }}
          bodyFile: .github/MALAI_RELEASE_TEMPLATE.md
