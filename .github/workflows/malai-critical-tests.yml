name: 🎯 Critical malai Infrastructure Tests

on:
  push:
    branches: [ main ]
    paths:
      - 'malai/**'
      - 'malai-cli-test-utils/**'
      - 'test-e2e.sh'
      - 'Cargo.toml'
      - 'Cargo.lock'
  pull_request:
    branches: [ main ]
    paths:
      - 'malai/**'
      - 'malai-cli-test-utils/**'
      - 'test-e2e.sh'
      - 'Cargo.toml'
      - 'Cargo.lock'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  SKIP_KEYRING: true

jobs:
  critical-infrastructure-tests:
    name: 🎯 Critical Infrastructure Pipeline Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target/
        key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-build-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential pkg-config

    - name: 🔨 Pre-compile malai Infrastructure Binaries
      run: |
        echo "🔨 Pre-compiling malai infrastructure binaries..."
        echo "Building required binaries to isolate compilation time from test execution"
        
        echo "📦 Building malai..."
        time cargo build --bin malai
        
        echo "📦 Building test utilities..."
        time cargo build -p malai-cli-test-utils
        
        echo "✅ All malai infrastructure binaries pre-compiled"
        echo "⏱️ Compilation time isolated from test execution"

    - name: 🎯 Run Critical Infrastructure Tests
      run: |
        echo "🎯 Running malai critical infrastructure tests (PRE-COMPILED)"
        echo "These tests validate the complete distributed infrastructure:"
        echo "  - Role detection: cluster.toml vs machine.toml structure"
        echo "  - Real daemon: Multi-identity P2P listeners"
        echo "  - CLI integration: Self-command optimization + P2P execution"  
        echo "  - Config validation: TOML validation + design compliance"
        echo "  - P2P protocols: ConfigUpdate + ExecuteCommand end-to-end"
        echo "  - File structure: Design-compliant cluster.private-key structure"
        echo "  - Complete workflows: Cluster manager + machine coordination"
        echo
        echo "⏱️  Timing: This step measures PURE infrastructure performance"
        echo "⏱️  Compilation time excluded from this measurement"
        echo
        
        # Make test script executable
        chmod +x test-e2e.sh
        
        # Run comprehensive infrastructure test
        echo "🧪 Starting malai infrastructure tests at: $(date)"
        start_time=$(date +%s)
        
        timeout 600 ./test-e2e.sh || {
          echo "❌ Tests failed or timed out after 10 minutes"
          exit 1
        }
        
        end_time=$(date +%s)
        duration=$((end_time - start_time))
        echo "⏱️  Infrastructure tests completed in: ${duration} seconds"

    - name: 📊 Test Results Summary
      if: always()
      run: |
        if [ $? -eq 0 ]; then
          echo "🎉 ✅ CRITICAL INFRASTRUCTURE TESTS PASSED"
          echo "✅ malai infrastructure tests completed successfully" 
          echo "🔧 Basic distributed infrastructure functionality validated"
        else
          echo "❌ 🚨 CRITICAL INFRASTRUCTURE TESTS FAILED"
          echo "❌ malai infrastructure has critical issues"
          echo "🔧 Investigate distributed system problems before proceeding"
        fi